%计算与SNR有相关性的边，在每个频率下跨被试计算
clc;
clear;
%初始化一个cell数组，其中包含了所有的激发静息差值矩阵
deltamatrixs = {'delta_1_15', 'delta_2_30', 'delta_3_6', 'delta_4_6', ...
    'delta_5_15', 'delta_6_30', 'delta_7_15', 'delta_8_30', ...
    'delta_9_30', 'delta_10_6', 'delta_11_6', 'delta_12_6', ...
    'delta_13_15', 'delta_14_30', 'delta_15_15', 'delta_16_6', ...
    'delta_17_30', 'delta_18_30', 'delta_19_6', 'delta_20_15', ...
    'delta_21_6', 'delta_22_6', 'delta_23_30', 'delta_24_15', ...
    'delta_25_30', 'delta_26_15', 'delta_27_15'};

for delta = 1:length(deltamatrixs)
    

% 初始化路径
    matrix_paths = {
                    ['D:\ssvepnet\sub01wuxiaoliang\matrix\',deltamatrixs{delta},'.csv'], ...
                    ['D:\ssvepnet\sub02xulan\matrix\',deltamatrixs{delta},'.csv'], ...
                    ['D:\ssvepnet\sub03zhouhaobo\matrix\',deltamatrixs{delta},'.csv'], ...
                    ['D:\ssvepnet\sub04qiaohe\matrix\',deltamatrixs{delta},'.csv'], ...
                    ['D:\ssvepnet\sub05zhangyueling\matrix\',deltamatrixs{delta},'.csv'], ...
                    ['D:\ssvepnet\sub06chenyiming2\matrix\',deltamatrixs{delta},'.csv'], ...
                    ['D:\ssvepnet\sub07wangzihao\matrix\',deltamatrixs{delta},'.csv'], ...
                    ['D:\ssvepnet\sub08zhangjingna\matrix\',deltamatrixs{delta},'.csv'], ...
                    ['D:\ssvepnet\sub09wangzhaoyang\matrix\',deltamatrixs{delta},'.csv'], ...
                    ['D:\ssvepnet\sub10laijunjie\matrix\',deltamatrixs{delta},'.csv']
                    };
    snr_paths = {
                ['D:\ssvepnet\sub01wuxiaoliang\snr\snr_',num2str(delta),'.csv'], ...
                ['D:\ssvepnet\sub02xulan\snr\snr_',num2str(delta),'.csv'], ...
                ['D:\ssvepnet\sub03zhouhaobo\snr\snr_',num2str(delta),'.csv'], ...
                ['D:\ssvepnet\sub04qiaohe\snr\snr_',num2str(delta),'.csv'], ...
                ['D:\ssvepnet\sub05zhangyueling\snr\snr_',num2str(delta),'.csv'], ...
                ['D:\ssvepnet\sub06chenyiming2\snr\snr_',num2str(delta),'.csv'], ...
                ['D:\ssvepnet\sub07wangzihao\snr\snr_',num2str(delta),'.csv'], ...
                ['D:\ssvepnet\sub08zhangjingna\snr\snr_',num2str(delta),'.csv'], ...
                ['D:\ssvepnet\sub09wangzhaoyang\snr\snr_',num2str(delta),'.csv'], ...
                ['D:\ssvepnet\sub10laijunjie\snr\snr_',num2str(delta),'.csv']
                };

    % 初始化变量
    num_subjects = length(matrix_paths);
    num_electrodes = 19;
    num_edges = num_electrodes * (num_electrodes - 1) / 2;
    edge_values = zeros(num_subjects, num_edges);
    snr_values = zeros(num_subjects, 1);

    % 读取数据
    for i = 1:num_subjects
        delta_matrix = csvread(matrix_paths{i});
        snr_values(i) = csvread(snr_paths{i});

        % 提取上三角矩阵的非对角线元素
        delta_matrix_triu = triu(delta_matrix, 1);
        edge_values(i, :) = delta_matrix_triu(delta_matrix_triu ~= 0);
    end

    % 计算相关性
    correlation_vector = zeros(num_edges, 1);
    for i = 1:num_edges
        [r, p] = corrcoef(edge_values(:, i), snr_values);

        % 检查显著性和阈值
        if p(1, 2) < 0.05 && abs(r(1, 2)) >= 0.6
    %     if  abs(r(1, 2)) >= 0.5
            correlation_vector(i) = r(1, 2);
        end
    end

    % 转换为矩阵形式
    correlation_matrix = zeros(num_electrodes, num_electrodes);
    correlation_matrix(triu(true(num_electrodes), 1)) = correlation_vector;
    correlation_matrix = correlation_matrix + correlation_matrix';

    % 保存结果
    csvwrite(['D:\ssvepnet\snrdeltamatrix\snrdeltamatrix',num2str(delta),'.csv'], correlation_matrix); 
end